@using System.Text
@using System.Text.Json
@using WhatsAppConvertor.Domain
@using WhatsAppConvertor.Domain.Dto
@model RazorTemplates.Models.ChatMessagesModel

<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Whats App - @Model.DisplayName</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx" crossorigin="anonymous">
  </head>

    <body>
        <div class='container'>
            <div class='row'>
            @{
                IEnumerable<ChatMessageDto> chatMessages = Model.ChatMessages;
                StringBuilder groupBuilder = new();

                groupBuilder.AppendLine("<div class=''>");

                foreach (ChatMessageDto chat in chatMessages)
                {
                    MessageType? messageType = chat.MessageType;

                    string offsetClass = chat.MessageFromMe ? "offset-md-3" : string.Empty;

                    groupBuilder.AppendLine($"<div class='message col-md-6 {offsetClass}'>");

                    if (messageType == MessageType.Text)
                    {
                        groupBuilder.AppendLine($"<div class=''>{chat.MessageText}</div>");
                    }
                    else if ((
                        messageType == MessageType.Image || 
                        messageType == MessageType.Video || 
                        messageType == MessageType.Gif || 
                        messageType == MessageType.Document) &&
                        !string.IsNullOrWhiteSpace(chat.Thumbnail))
                    {
                        groupBuilder.AppendLine($"<img alt='{chat.MessageText}' src='data:image/jpeg;base64,{chat.Thumbnail}' /><div>{chat.MessageText}</div>");
                    }
                    else if (messageType == MessageType.Contact)
                    {
                        groupBuilder.AppendLine($"<div>Contact: {chat.MessageText}</div>");
                    }

                    groupBuilder.AppendLine("</div>");
                }

                groupBuilder.AppendLine("</div>");
                <div>@Model.DisplayName </div>

                @Html.Raw(groupBuilder);
            }
            </div>
        </div>
    </body>
</html>

<script>
(function() {
}());
</script>